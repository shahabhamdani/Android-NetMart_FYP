Index: app/src/main/java/com/Shahab/netmart/MainUserActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Shahab.netmart;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.ImageView;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.HashMap;\r\n\r\n\r\npublic class MainUserActivity extends AppCompatActivity {\r\n\r\n    private FirebaseAuth firebaseAuth;\r\n    private ProgressDialog progressDialog;\r\n\r\n    private TextView userName;\r\n    private TextView userPhone;\r\n    private TextView userEmail;\r\n    private ImageView cartIv;\r\n    private TextView  tabProductsTv;\r\n    private TextView tabOrdersTv;\r\n\r\n    private RelativeLayout productsRl;\r\n    private RelativeLayout ordersRl;\r\n\r\n\r\n    DrawerLayout drawerLayout;\r\n    ActionBarDrawerToggle actionBarDrawerToggle;\r\n    NavigationView navigationView;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main_user);\r\n\r\n\r\n        tabProductsTv = (TextView) findViewById(R.id.tabProductsTv);\r\n        tabOrdersTv = (TextView) findViewById(R.id.tabOrdersTv);\r\n        productsRl =  findViewById(R.id.productsRl);\r\n        ordersRl =  findViewById(R.id.ordersRl);\r\n\r\n        progressDialog = new ProgressDialog(this);\r\n        progressDialog.setTitle(\"Please Wait\");\r\n        progressDialog.setCanceledOnTouchOutside(false);\r\n        firebaseAuth = FirebaseAuth.getInstance();\r\n        checkUser();\r\n\r\n\r\n        setUpToolbar();\r\n        navigationView = (NavigationView) findViewById(R.id.navigation_menu);\r\n        navigationView.setNavigationItemSelectedListener(new NavigationView.OnNavigationItemSelectedListener() {\r\n            @Override\r\n            public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {\r\n                Intent intent = null;\r\n                switch (menuItem.getItemId()) {\r\n                    case R.id.navProfile:\r\n                        intent = new Intent(MainUserActivity.this, ProfileEditUserActivity.class);\r\n                        startActivity(intent);\r\n                        break;\r\n\r\n                    case R.id.navMyCart: {\r\n                        intent = new Intent(MainUserActivity.this, CartActivity.class);\r\n                        startActivity(intent);\r\n                    }\r\n                    break;\r\n\r\n                    case R.id.navCustomPackage: {\r\n                        intent = new Intent(MainUserActivity.this, CutomePackageActivity.class);\r\n                        startActivity(intent);\r\n                    }\r\n                    break;\r\n\r\n                    case R.id.navSignOut: {\r\n                        makeMeOffline();\r\n\r\n                    }\r\n                    break;\r\n\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        //Cart Button Click\r\n        cartIv = findViewById(R.id.cartIv);\r\n        cartIv.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(MainUserActivity.this, CartActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n\r\n        //Products Tab Clcik\r\n        tabOrdersTv.setOnClickListener(new View.OnClickListener() {\r\n\r\n            public void onClick(View v) {\r\n                showOrdersUI();\r\n            }\r\n        });\r\n\r\n        tabProductsTv.setOnClickListener(new View.OnClickListener() {\r\n\r\n            public void onClick(View v) {\r\n\r\n                showProductsUI();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void makeMeOffline() {\r\n\r\n        //after logging in, make user online\r\n        progressDialog.setMessage(\"Logging Out...\");\r\n\r\n        HashMap<String, Object> hashMap = new HashMap<>();\r\n        hashMap.put(\"online\",\"false\");\r\n\r\n        //update value to Database\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference(\"Users\");\r\n        ref.child(firebaseAuth.getUid()).updateChildren(hashMap)\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        //Updated Successfullly\r\n                        firebaseAuth.signOut();\r\n\r\n                        //if logged in Go to Dashboard else go to Login screen\r\n                        checkUser();\r\n                    }\r\n                })\r\n\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        //Failed Updating\r\n                        progressDialog.dismiss();\r\n                        Toast.makeText(MainUserActivity.this, \"\"+e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n\r\n    private void checkUser(){\r\n        FirebaseUser user = firebaseAuth.getCurrentUser();\r\n\r\n        if(user == null){\r\n            startActivity(new Intent(MainUserActivity.this, LoginActivity.class));\r\n            finish();\r\n        }\r\n        else{\r\n            loadMyInfo();\r\n        }\r\n    }\r\n\r\n    private void loadMyInfo() {\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference(\"Users\");\r\n        ref.orderByChild(\"uid\").equalTo(firebaseAuth.getUid())\r\n\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        for(DataSnapshot ds: dataSnapshot.getChildren()){\r\n                            String name = \"\"+ds.child(\"name\").getValue();\r\n                            String accountType = \"\"+ds.child(\"accountType\").getValue();\r\n                            String phone = \"\"+ds.child(\"phone\").getValue();\r\n                            String email = \"\"+ds.child(\"email\").getValue();\r\n\r\n                            userName = (TextView) findViewById(R.id.userNameTv);\r\n                            userName.setText(name +\" (\"+accountType+\")\");\r\n\r\n                            userPhone = (TextView) findViewById(R.id.phoneTv);\r\n                            userPhone.setText(phone);\r\n\r\n                            userEmail = (TextView) findViewById(R.id.emailTv);\r\n                            userEmail.setText(email);\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                    }\r\n                });\r\n    }\r\n    public void setUpToolbar() {\r\n        drawerLayout = findViewById(R.id.drawerLayout);\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n        actionBarDrawerToggle = new ActionBarDrawerToggle(this, drawerLayout, toolbar, R.string.app_name, R.string.app_name);\r\n        drawerLayout.addDrawerListener(actionBarDrawerToggle);\r\n        actionBarDrawerToggle.syncState();\r\n\r\n    }\r\n\r\n\r\n    private void showOrdersUI() {\r\n        //show orders ui and hide products ui\r\n        productsRl.setVisibility(View.GONE);\r\n        ordersRl.setVisibility(View.VISIBLE);\r\n\r\n        tabProductsTv.setTextColor(getResources().getColor(R.color.colourBlack));\r\n        tabProductsTv.setBackgroundColor(getResources().getColor(android.R.color.transparent));\r\n\r\n        tabOrdersTv.setTextColor(getResources().getColor(R.color.colorWhite));\r\n        tabOrdersTv.setBackgroundResource(R.drawable.shape_rect04);\r\n    }\r\n\r\n    private void showProductsUI() {\r\n        //show orders ui and hide products ui\r\n        ordersRl.setVisibility(View.GONE);\r\n        productsRl.setVisibility(View.VISIBLE);\r\n\r\n        tabProductsTv.setTextColor(getResources().getColor(R.color.colorWhite));\r\n        tabProductsTv.setBackgroundResource(R.drawable.shape_rect04);\r\n\r\n\r\n        tabOrdersTv.setTextColor(getResources().getColor(R.color.colourBlack));\r\n        tabOrdersTv.setBackgroundColor(getResources().getColor(android.R.color.transparent));\r\n\r\n    }\r\n\r\n\r\n}
===================================================================
--- app/src/main/java/com/Shahab/netmart/MainUserActivity.java	(revision 3f5bef3a4d014ea76bd4390e61cc6ca683ce8369)
+++ app/src/main/java/com/Shahab/netmart/MainUserActivity.java	(date 1616347887522)
@@ -86,11 +86,11 @@
                     }
                     break;
 
-                    case R.id.navCustomPackage: {
-                        intent = new Intent(MainUserActivity.this, CutomePackageActivity.class);
-                        startActivity(intent);
-                    }
-                    break;
+                   // case R.id.navCustomPackage: {
+                    //    intent = new Intent(MainUserActivity.this, CutomePackageActivity.class);
+                    //  startActivity(intent);
+                   // }
+                  //  break;
 
                     case R.id.navSignOut: {
                         makeMeOffline();
Index: app/src/main/java/com/Shahab/netmart/CutomePackageActivity.java
===================================================================
--- app/src/main/java/com/Shahab/netmart/CutomePackageActivity.java	(revision 3f5bef3a4d014ea76bd4390e61cc6ca683ce8369)
+++ app/src/main/java/com/Shahab/netmart/CutomePackageActivity.java	(revision 3f5bef3a4d014ea76bd4390e61cc6ca683ce8369)
@@ -1,37 +0,0 @@
-package com.Shahab.netmart;
-
-import androidx.appcompat.app.AppCompatActivity;
-
-import android.os.Bundle;
-import android.widget.ArrayAdapter;
-import android.widget.Spinner;
-
-public class CutomePackageActivity extends AppCompatActivity {
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_cutome_package);
-
-        Spinner mySpinner1 = (Spinner) findViewById(R.id.spinnerCategory);
-        ArrayAdapter<String> myAdapter1 = new ArrayAdapter<String>(CutomePackageActivity.this,
-                android.R.layout.simple_list_item_1, getResources().getStringArray(R.array.Category));
-        myAdapter1.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        mySpinner1.setAdapter(myAdapter1);
-
-        Spinner mySpinner2 = (Spinner) findViewById(R.id.spinnerBrand);
-        ArrayAdapter<String> myAdapter2 = new ArrayAdapter<String>(CutomePackageActivity.this,
-                android.R.layout.simple_list_item_1, getResources().getStringArray(R.array.Brand));
-        myAdapter2.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        mySpinner2.setAdapter(myAdapter2);
-
-        Spinner mySpinner3 = (Spinner) findViewById(R.id.spinnerstoreName);
-        ArrayAdapter<String> myAdapter3 = new ArrayAdapter<String>(CutomePackageActivity.this,
-                android.R.layout.simple_list_item_1, getResources().getStringArray(R.array.storeName));
-        myAdapter3.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        mySpinner3.setAdapter(myAdapter3);
-
-
-
-    }
-}
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_7\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 3f5bef3a4d014ea76bd4390e61cc6ca683ce8369)
+++ .idea/misc.xml	(date 1616346812889)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"1.8\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision 3f5bef3a4d014ea76bd4390e61cc6ca683ce8369)
+++ .idea/gradle.xml	(date 1616346812938)
@@ -15,6 +15,7 @@
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
+        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
